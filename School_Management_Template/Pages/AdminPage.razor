@page "/adminPage"
@layout MyLayout
@* @attribute [Authorize] *@ 
@inject IStudentService stdServ

<style>
    h1, h2, h3, h4, h5, h6 {
        font-family: 'Libre Franklin', sans-serif;
        --font-sans: 'Libre Franklin';
    }
</style>
<style>
    body {
        font-family: 'Libre Franklin', sans-serif;
        --font-sans: 'Libre Franklin';
    }
</style>

 <AuthorizeView Policy="Role">  

<div class="grid min-h-screen bg-gray-100/40 lg:grid-cols-[280px_1fr] dark:bg-gray-800/40">

    <div class="flex flex-col">
        <header class="flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40">
            <a class="lg:hidden" href="#" rel="ugc">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="24"
                     height="24"
                     viewBox="0 0 24 24"
                     fill="none"
                     stroke="currentColor"
                     stroke-width="2"
                     stroke-linecap="round"
                     stroke-linejoin="round"
                     class="h-6 w-6">
                    <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z"></path>
                    <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9"></path>
                    <path d="M12 3v6"></path>
                </svg>
                <span class="sr-only">Home</span>
            </a>
            <div class="w-full flex-1">
                <form>
                    <div class="relative">
                        <svg xmlns="http://www.w3.org/2000/svg"
                             width="24"
                             height="24"
                             viewBox="0 0 24 24"
                             fill="none"
                             stroke="currentColor"
                             stroke-width="2"
                             stroke-linecap="round"
                             stroke-linejoin="round"
                             class="absolute left-2.5 top-2.5 h-4 w-4 text-gray-500 dark:text-gray-400">
                            <circle cx="11" cy="11" r="8"></circle>
                            <path d="m21 21-4.3-4.3"></path>
                        </svg>
                        <input class="flex h-10 rounded-md border border-input px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full bg-white shadow-none appearance-none pl-8 md:w-2/3 lg:w-1/3 dark:bg-gray-950"
                               placeholder="Search..."
                               type="search" />
                    </div>
                </form>
            </div>
            <button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                    id="menu-button"
                    type="button"
                    aria-haspopup="menu"
                    aria-expanded="false"
                    data-state="closed">
                <img src="/placeholder.svg"
                     width="32"
                     height="32"
                     class="rounded-full"
                     alt="Avatar"
                     style="aspect-ratio: 32 / 32; object-fit: cover;" />
                <span class="sr-only">Toggle user menu</span>
            </button>
        </header>
        <main class="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-10">
            @foreach(var item in student)
                {
                    
                <div class="rounded-lg border bg-card text-card-foreground shadow-sm" data-v0-t="card">
                <div class="grid w-full p-4 gap-4 md:grid-cols-2 md:gap-6">
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Students</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">@item.FirstName!.Count()</h3>
                    </div>
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Teachers</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">56</h3>
                    </div>
                </div>
            </div>
            <div class="rounded-lg border bg-card text-card-foreground shadow-sm" data-v0-t="card">
                <div class="grid w-full p-4 gap-4 md:grid-cols-2 md:gap-6">
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Courses</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">78</h3>
                    </div>
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Messages</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">1,234</h3>
                    </div>
                </div>
            </div>
            <div class="rounded-lg border bg-card text-card-foreground shadow-sm" data-v0-t="card">
                <div class="grid w-full p-4 gap-4 md:grid-cols-2 md:gap-6">
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Attendance</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">90%</h3>
                    </div>
                    <div class="flex flex-col gap-1.5">
                        <h2 class="text-lg font-semibold">Total Messages</h2>
                        <h3 class="text-3xl font-bold tracking-tighter">1,234</h3>
                    </div>
                </div>
            </div>
                }
        </main>
    </div>
</div>
  </AuthorizeView>  

@code {
    private List<Students> student = new List<Students>();
    protected override async Task OnInitializedAsync()
    {
        student = await stdServ.GetAllStudentsAsync();
        
    }
}
