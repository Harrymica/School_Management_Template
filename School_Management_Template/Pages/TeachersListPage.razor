@page "/TeacherPage"
@layout MyLayout
@inject ITeacherSercives serv
@inject IJSRuntime jsruntime
@inject IConfiguration config
<style>
    h1, h2, h3, h4, h5, h6 {
        font-family: 'Arimo', sans-serif;
        --font-sans: 'Arimo';
    }
</style>
<style>
    body {
        font-family: 'Cormorant Garamond', serif;
        --font-serif: 'Cormorant Garamond';
    }
</style>

<div class="grid min-h-screen w-full overflow-hidden lg:grid-cols-[280px_1fr]">
    <div class="hidden border-r bg-gray-100/40 lg:block dark:bg-gray-800/40">
        <div class="flex h-full max-h-screen flex-col gap-2">
            <div class="flex h-[60px] items-center border-b px-6">
                <a class="flex items-center gap-2 font-semibold" href="#">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         stroke="currentColor"
                         stroke-width="2"
                         stroke-linecap="round"
                         stroke-linejoin="round"
                         class="h-6 w-6">
                        <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z"></path>
                        <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9"></path>
                        <path d="M12 3v6"></path>
                    </svg>
                    <span class="">My School</span>
                </a>
                <button class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground ml-auto h-8 w-8">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         stroke="currentColor"
                         stroke-width="2"
                         stroke-linecap="round"
                         stroke-linejoin="round"
                         class="h-4 w-4">
                        <path d="M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9"></path>
                        <path d="M10.3 21a1.94 1.94 0 0 0 3.4 0"></path>
                    </svg>
                    <span class="sr-only">Toggle notifications</span>
                </button>
            </div>
           
        </div>
    </div>
    <div class="flex flex-col">
        <header class="flex h-14 lg:h-[60px] items-center gap-4 border-b bg-gray-100/40 px-6 dark:bg-gray-800/40">
            <a class="lg:hidden" href="#">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="24"
                     height="24"
                     viewBox="0 0 24 24"
                     fill="none"
                     stroke="currentColor"
                     stroke-width="2"
                     stroke-linecap="round"
                     stroke-linejoin="round"
                     class="h-6 w-6">
                    <path d="M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z"></path>
                    <path d="m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9"></path>
                    <path d="M12 3v6"></path>
                </svg>
                <span class="sr-only">Home</span>
            </a>
            <div class="w-full flex-1">
                <form>
                    <div class="relative">
                        <svg xmlns="http://www.w3.org/2000/svg"
                             width="24"
                             height="24"
                             viewBox="0 0 24 24"
                             fill="none"
                             stroke="currentColor"
                             stroke-width="2"
                             stroke-linecap="round"
                             stroke-linejoin="round"
                             class="absolute left-2.5 top-2.5 h-4 w-4 text-gray-500 dark:text-gray-400">
                            <circle cx="11" cy="11" r="8"></circle>
                            <path d="m21 21-4.3-4.3"></path>
                        </svg>
                        <input class="flex h-10 rounded-md border border-input px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 w-full bg-white shadow-none appearance-none pl-8 md:w-2/3 lg:w-1/3 dark:bg-gray-950"
                               placeholder="Search students..."
                               type="search" />
                    </div>
                </form>
            </div>
            <button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800"
                    type="button"
                    id="radix-:r11:"
                    aria-haspopup="menu"
                    aria-expanded="false"
                    data-state="closed">
                <svg xmlns="http://www.w3.org/2000/svg"
                     width="24"
                     height="24"
                     viewBox="0 0 24 24"
                     fill="none"
                     stroke="currentColor"
                     stroke-width="2"
                     stroke-linecap="round"
                     stroke-linejoin="round"
                     class="h-4 w-4 round-full">
                    <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                    <circle cx="9" cy="7" r="4"></circle>
                    <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                    <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
                <span class="sr-only">Toggle user menu</span>
            </button>
        </header>
        <main class="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
            <div class="flex items-center">
                <h1 class="font-semibold text-lg md:text-2xl">Student Records</h1>
                <button class="inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 rounded-md px-3 ml-auto">
                    <a href="/enrollTeacher">
                        Add Teacher
                    </a>

                </button>
            </div>
            <div class="border shadow-sm rounded-lg">
                <div class="relative w-full overflow-auto">
                    <table class="w-full caption-bottom text-sm">
                        <thead class="[&amp;_tr]:border-b">
                            <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    First Name
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Middle Name
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Last Name
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Age
                                </th>
                               
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Course
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Course
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    LGA
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Email
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Image
                                </th>
                                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground [&amp;:has([role=checkbox])]:pr-0">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody class="[&amp;_tr:last-child]:border-0">
                            @foreach (var item in _teachers)
                            {
                                <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.FirstName</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.MiddleName</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.LaststName</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.Age.ToString("dd/MM/yyyy")</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.CourseId</td>
                                    

                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.State</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.LGA</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">@item.Email</td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">
                                        @if (string.IsNullOrWhiteSpace(item.Image) == false)
                                        {
                                            <img src="@CreateWebPath(item.Image)" style="height:120px; width:120px" />
                                        }

                                    </td>
                                    <td class="p-4 align-middle [&amp;:has([role=checkbox])]:pr-0">
                                        <div class="flex gap-2">
                                            <button @onclick="() => Edit(item.Id)"
                                                    class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 w-10">
                                                <svg xmlns="http://www.w3.org/2000/svg"
                                                     width="24"
                                                     height="24"
                                                     viewBox="0 0 24 24"
                                                     fill="none"
                                                     stroke="currentColor"
                                                     stroke-width="2"
                                                     stroke-linecap="round"
                                                     stroke-linejoin="round"
                                                     class="h-4 w-4">
                                                    <path d="M4 13.5V4a2 2 0 0 1 2-2h8.5L20 7.5V20a2 2 0 0 1-2 2h-5.5"></path>
                                                    <polyline points="14 2 14 8 20 8"></polyline>
                                                    <path d="M10.42 12.61a2.1 2.1 0 1 1 2.97 2.97L7.95 21 4 22l.99-3.95 5.43-5.44Z"></path>
                                                </svg>
                                                <span class="sr-only">Edit</span>
                                            </button>
                                            <button @onclick="() => Delete(item.Id)"
                                                    class="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 w-10">
                                                <svg xmlns="http://www.w3.org/2000/svg"
                                                     width="24"
                                                     height="24"
                                                     viewBox="0 0 24 24"
                                                     fill="none"
                                                     stroke="currentColor"
                                                     stroke-width="2"
                                                     stroke-linecap="round"
                                                     stroke-linejoin="round"
                                                     class="h-4 w-4">
                                                    <path d="M3 6h18"></path>
                                                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                                                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                                                </svg>
                                                <span class="sr-only">Delete</span>
                                            </button>
                                        </div>
                                    </td>
                                </tr>

                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>
</div>

@if (_teacher == null)
{

}

else
{

    <EditTeacherPage @ref="editPage" UserToEdit="_teacher" />
}

@code
{
    private EditTeacherPage? editPage = new EditTeacherPage();
    private long maxSize = 1024 * 1024 * 10;
    private int maxAllowedFiles = 1;
    private List<string> errors = new();
    private List<Teachers> _teachers = new List<Teachers>();
    private Teachers _teacher = new Teachers();

    protected override async Task OnInitializedAsync()
    {
        _teachers = await serv.GetAllTeacherAsync();
    }

    private async Task Delete(int Id)
    {
        await serv.DeleteTeacherAsync(Id);
        await jsruntime.InvokeVoidAsync("refreshPage");
    }
    private async Task Edit(int Id)
    {
        _teacher = _teachers.FirstOrDefault(u => u.Id == Id)!;


        if (_teacher != null && editPage != null)
        {
            editPage.ShowModal();
            editPage.UserToEdit = _teacher;
        }
        
    }

    private string CreateWebPath(string relativePath)
    {
        return Path.Combine(config.GetValue<string>("WebStorageRoot")!, relativePath);
    }
}