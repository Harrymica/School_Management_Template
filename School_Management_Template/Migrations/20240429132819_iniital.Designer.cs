// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School_Management_Template.Database;

#nullable disable

namespace School_Management_Template.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240429132819_iniital")]
    partial class iniital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("CoursesId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("CoursesStudents");
                });

            modelBuilder.Entity("School_Management_Template.Data.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin007@gmail.com",
                            FullName = "Hasan Jubil",
                            Password = "Admin@007",
                            PhoneNumber = "08878399001",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("School_Management_Template.Data.ClassModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CoursesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId");

                    b.ToTable("ClassModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jss1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jss2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jss3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ss1"
                        },
                        new
                        {
                            Id = 5,
                            Name = "ss2"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ss3"
                        });
                });

            modelBuilder.Entity("School_Management_Template.Data.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ClassModelId")
                        .HasColumnType("int");

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeachersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeachersId")
                        .IsUnique()
                        .HasFilter("[TeachersId] IS NOT NULL");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseCode = "Bsc 001",
                            Description = "Basic Sciences",
                            Name = "Basic Science"
                        },
                        new
                        {
                            Id = 2,
                            CourseCode = "Bst 001",
                            Description = "Basic Technology",
                            Name = "Basic Tech"
                        },
                        new
                        {
                            Id = 3,
                            CourseCode = "Maths 101",
                            Description = "Mathematics",
                            Name = "Maths"
                        },
                        new
                        {
                            Id = 4,
                            CourseCode = "Eng 012",
                            Description = "English Language",
                            Name = "English"
                        },
                        new
                        {
                            Id = 5,
                            CourseCode = "chem 101",
                            Description = "Chemistry for senior high school",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 6,
                            CourseCode = "Phy 124",
                            Description = "Basic Physics for senior high score",
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 7,
                            CourseCode = "Bio 001",
                            Description = "Biological Sciences for senior high school",
                            Name = "Biology"
                        });
                });

            modelBuilder.Entity("School_Management_Template.Data.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoursesId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesId");

                    b.HasIndex("StudentId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("School_Management_Template.Data.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassModelId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaststName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassModelId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("School_Management_Template.Data.Teachers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClassModelId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaststName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassModelId");

                    b.HasIndex("CourseId")
                        .IsUnique()
                        .HasFilter("[CourseId] IS NOT NULL");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("CoursesStudents", b =>
                {
                    b.HasOne("School_Management_Template.Data.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Management_Template.Data.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("School_Management_Template.Data.ClassModel", b =>
                {
                    b.HasOne("School_Management_Template.Data.Courses", "Courses")
                        .WithMany("ClassModel")
                        .HasForeignKey("CoursesId");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("School_Management_Template.Data.Courses", b =>
                {
                    b.HasOne("School_Management_Template.Data.Teachers", "Teachers")
                        .WithOne()
                        .HasForeignKey("School_Management_Template.Data.Courses", "TeachersId");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("School_Management_Template.Data.Result", b =>
                {
                    b.HasOne("School_Management_Template.Data.Courses", "Courses")
                        .WithMany("results")
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Management_Template.Data.Students", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Management_Template.Data.Students", b =>
                {
                    b.HasOne("School_Management_Template.Data.ClassModel", "ClassModel")
                        .WithMany("Students")
                        .HasForeignKey("ClassModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassModel");
                });

            modelBuilder.Entity("School_Management_Template.Data.Teachers", b =>
                {
                    b.HasOne("School_Management_Template.Data.ClassModel", "ClassModel")
                        .WithMany("Teachers")
                        .HasForeignKey("ClassModelId");

                    b.HasOne("School_Management_Template.Data.Courses", "Course")
                        .WithOne()
                        .HasForeignKey("School_Management_Template.Data.Teachers", "CourseId");

                    b.Navigation("ClassModel");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("School_Management_Template.Data.ClassModel", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("School_Management_Template.Data.Courses", b =>
                {
                    b.Navigation("ClassModel");

                    b.Navigation("results");
                });

            modelBuilder.Entity("School_Management_Template.Data.Students", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
